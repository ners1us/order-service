services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "3000:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    environment:
      - DB_URL=postgres://user:password@postgres:5432/order-service-db?sslmode=disable
      - JWT_SECRET=too_elaborate_jwt_secret
      - REST_PORT=8080
      - GRPC_PORT=3000
    networks:
      - app_network

  migrate:
    image: migrate/migrate:latest
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://user:password@postgres:5432/order-service-db?sslmode=disable",
      "up"
    ]
    networks:
      - app_network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order-service-db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres-data:
